#======================================================================================================================
# §package      Shell::Console::Impl::BatchConsole
#----------------------------------------------------------------------------------------------------------------------
# §description  Concrete Implementation for a Batch Console
#======================================================================================================================
package Shell::Console::BatchConsole;
use base Shell::Console::Console;

use strict ;

use Term::ReadKey;

#======================================================================================================================
# §function     open
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->open()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub open { 
    my $self = shift;
    
    my $FileHandler = $self->{'BatchFileHandler'} ;
    if ( not defined $FileHandler ) {
        my $BatchFileName = $self->{'FileName'} ;
        if ( open( $FileHandler, '<', $BatchFileName ) ) {
            $self->{'BatchFileHandler'} = $FileHandler ;
        } else {
            die "\nERROR: Could not open batch file '$BatchFileName'\n" ;
        }
    }
    
    return ; 
}

#======================================================================================================================
# §function     close
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->close()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub close { 
    my $self = shift;

    my $FileHandler = $self->{'BatchFileHandler'} ;
    if ( defined $FileHandler ) {
        close( $FileHandler ) ;
        $self->{'BatchFileHandler'} = undef ;
    }    
    return ; 
}

#======================================================================================================================
# §function     prompt
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Input = $Console->prompt( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#----------------------------------------------------------------------------------------------------------------------
# §return       $Input | TODO | string
#======================================================================================================================
sub prompt {
    my $self = shift;

    my $InputLine = '' ;
    my $FileHandler = $self->{'BatchFileHandler'} ;
    if ( defined $FileHandler ) {
        $InputLine =  <$FileHandler> ;
        if ( not defined $InputLine ) {
            return 'exit' ;
        }
        if ( $self->{'Prompt'} ) {
            my $Format = shift ;
            printf( $Format, @_ ) ;
            printf( $InputLine ) ;
        }
    }
    $InputLine =~ s/[\r\n]//g ;
    
    return $InputLine ;
}

#======================================================================================================================
# §function     output
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->output( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#----------------------------------------------------------------------------------------------------------------------
# §return       $Name | TODO | type
#======================================================================================================================
sub output {
    my $self = shift;

    my $Format = shift ;
    printf( $Format, @_ ) ;

    return 1 ;
}

1;
