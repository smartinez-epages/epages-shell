#======================================================================================================================
# Alias
#======================================================================================================================
package Shell::Command::Alias ;
use base Shell::Command ;

use strict;

#======================================================================================================================
# §function     getName
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $CommandName = $Command->getName() ;
#----------------------------------------------------------------------------------------------------------------------
# §description  Returns the name of the command
#----------------------------------------------------------------------------------------------------------------------
# §return       $Name | the command name | string
#======================================================================================================================
sub getName {
    my $self = shift;

    return 'alias' ;
}

#======================================================================================================================
# §function     getAlias
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $CommandAlias = $Command->getAlias() ;
#----------------------------------------------------------------------------------------------------------------------
# §description  Returns an array with all the alias for this command
#----------------------------------------------------------------------------------------------------------------------
# §return       $AliasList | All the alias for this command | array.ref
#======================================================================================================================
sub getAlias {
    my $self = shift;

    return [ 'al' ] ;
}

#======================================================================================================================
# §function     getDescription
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $aDescription = $Command->getDescription() ;
#----------------------------------------------------------------------------------------------------------------------
# §description  Returns a list of text lines with the short description for the command.
#----------------------------------------------------------------------------------------------------------------------
# §return       $aDescription | Description for the command | array.ref
#======================================================================================================================
sub getDescription {
    my $self = shift;

    return [
        'Show the alias for the available commands.',
    ] ;
}

#======================================================================================================================
# §function     run
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Command->run( $hArguments ) 
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $hArguments | Arguments provided in the shell for this command | hash.ref
#======================================================================================================================
sub run {
    my $self = shift;

    my ( $hArguments) = @_ ;

    my $Shell = $self->{'Shell'} ;
    my $Console = $Shell->getConsole() ;
    
    $Console->debug( "Run Command ALIAS\n" ) ;

    $Console->output( "\nAvailable commands and their alias:\n\n" ) ;
    my $CmdNames = $Shell->getCommandNames() ;
    foreach my $CommandName ( @$CmdNames ) {
        $self->_showComandAlias( $Shell->getCommand( $CommandName ) ) ;
    }

    return;
}

#======================================================================================================================
# §function     _showComandAlias
# §state        private
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Command->_showComandAlias( $Command ) 
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub _showComandAlias {
    my $self = shift;

    my ( $Command ) = @_ ;

    my $Console = $self->{'Shell'}->getConsole() ;
    
    my $Aliases = $Command->getAlias() ;
    if ( scalar @$Aliases ) {
        $Console->output( "  - %-20s", $Command->getName() ) ;
        my $Separator = '' ;
        foreach my $Alias ( @$Aliases ) {
            $Console->output( "%s%s", $Separator, $Alias) ;
            $Separator = ', ' ;
        }
        $Console->output( "\n" ) ;
    }

    $Console->jarl() ;
    
    return;
}

1;
