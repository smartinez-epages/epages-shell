#======================================================================================================================
# §package      Shell::Console
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
package Shell::Console;

use strict ;

use Exporter 'import' ;

our @EXPORT_OK = qw (
    NewConsole
) ;

use Shell::Consoles::TerminalConsole ;
use Shell::Consoles::BatchConsole ;

use Data::Dumper;

$Data::Dumper::Indent = 1 ;

#======================================================================================================================
# §function     NewConsole
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console = NewConsole( $Shell )
#----------------------------------------------------------------------------------------------------------------------
# §description  Factory function ... TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Shell | TODO | object
#----------------------------------------------------------------------------------------------------------------------
# §return       $Console | TODO | object
#======================================================================================================================
sub NewConsole {
    my ( $Shell ) = @_ ;

    my $Console = undef ;
    my $Arguments = $Shell->getArguments() ;
    my $BatchFileName = $Arguments->{'BatchFileName'} ;
    
    if ( defined $BatchFileName ) {
        $Console =  Shell::Consoles::BatchConsole->new({ 
                        'FileName'  => $BatchFileName, 
                        'Prompt'    => $Arguments->{'Prompt'}
                    }) ; 
    } else {
    my $BatchFileName = $Arguments->{'BatchFileName'} ;
        $Console =  Shell::Consoles::TerminalConsole->new({ 
                        'Pager' => not $Arguments->{'NoPager'}
                    }) ; 
    }

    return $Console ;
}

#======================================================================================================================
# §function     new
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       my $console = Shell::Console->new( $hOptions ) ;
#----------------------------------------------------------------------------------------------------------------------
# §description  Console constructor
#----------------------------------------------------------------------------------------------------------------------
# §input        $hOptions | Construction options | hash.ref
#----------------------------------------------------------------------------------------------------------------------
# §return       $Shell | New object instance | object
#======================================================================================================================
sub new {
    my $class = shift;

    my ( $hOptions ) = @_ ;

    my $hAttributes = {
        'Verbosity'   => 1 
    } ;
    
    return bless( { %$hAttributes, %$hOptions }, $class );
}

#======================================================================================================================
# §function     setVerbosity
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->setVerbosity( $Verbosity )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Data | TODO | any
#======================================================================================================================
sub setVerbosity {
    my $self = shift;

    my ( $Verbosity ) = @_ ;
    
    $self->{'Verbosity'} =  $Verbosity ;

    return ;
}

#======================================================================================================================
# §function     getVerbosity
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->getVerbosity()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Data | TODO | any
#======================================================================================================================
sub getVerbosity {
    my $self = shift;

    return $self->{'Verbosity'} ;
}

#======================================================================================================================
# §function     error
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->error( ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Data | TODO | any
#======================================================================================================================
sub error {
    my $self = shift;

    $self->output( "\nERROR : @_\n" ) ;

    return ;
}

#======================================================================================================================
# §function     dump
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->dump( ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Data | TODO | any
#======================================================================================================================
sub dump {
    my $self = shift;

    $self->output( Dumper( @_ ) );

    return ;
}

#======================================================================================================================
# §function     debug
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->debug( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#======================================================================================================================
sub debug {
    my $self = shift;

    if ( $self->{'Debug'} ) {
        my $Format = shift ;
        $self->output( "DEBUG: $Format", @_ ) ;
    }

    return ;
}

#======================================================================================================================
# §function     open
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->open()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub open { return ; }

#======================================================================================================================
# §function     close
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->close()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub close { return ; }

#======================================================================================================================
# §function     reset
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->reset()
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#======================================================================================================================
sub reset { return ; }

#======================================================================================================================
# §function     prompt
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Input = $Console->prompt( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#----------------------------------------------------------------------------------------------------------------------
# §return       $Input | TODO | string
#======================================================================================================================
sub prompt { return '' ; }

#======================================================================================================================
# §function     info
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->info( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#----------------------------------------------------------------------------------------------------------------------
# §return       $Name | TODO | type
#======================================================================================================================
sub info {
    my $self = shift;

    if ( $self->{'Verbosity'} ) {
        $self->output( @_ ) ;
    } 
    
    return ;
}

#======================================================================================================================
# §function     output
# §state        public
#----------------------------------------------------------------------------------------------------------------------
# §syntax       $Console->output( $Format, ... )
#----------------------------------------------------------------------------------------------------------------------
# §description  TODO
#----------------------------------------------------------------------------------------------------------------------
# §input        $Format | TODO | string
#----------------------------------------------------------------------------------------------------------------------
# §return       $Continue | TODO | boolean
#======================================================================================================================
sub output { return 1 ; }


1;
